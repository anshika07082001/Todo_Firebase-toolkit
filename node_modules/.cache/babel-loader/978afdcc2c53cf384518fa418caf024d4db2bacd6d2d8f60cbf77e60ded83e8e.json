{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Anshika/todo_firebase_redux/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport firebaseApp from './Firebase';\nimport { getDatabase, onValue, push, ref, remove, update } from 'firebase/database';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addText, editText, getData } from './features/todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const db = getDatabase(firebaseApp);\n  var state = useSelector(state => state.todoSlice);\n  var dispatch = useDispatch();\n  var [btnTxt, setBtnTxt] = useState('Add New Task');\n  var [title, setTitle] = useState('');\n  var [todolist, setTodoList] = useState([]);\n  var [edit, setEdit] = useState('');\n  var inpRef = useRef();\n  const todoRef = ref(db, \"/todos\");\n  useEffect(() => {\n    dispatch(getData());\n    onValue(todoRef, snapshot => {\n      const todos = snapshot.val();\n      const newTodoList = [];\n      for (let id in todos) {\n        newTodoList.push({\n          id,\n          ...todos[id]\n        });\n      }\n      setTodoList(newTodoList);\n    });\n  }, [db]);\n  // Input Handler Function\n  const inpChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n  // function adds data in a list\n  // console.log(state)\n  const addData = () => {\n    if (inpRef.current.value != '') {\n      if (btnTxt == 'Add New Task') {\n        const todo = {\n          title,\n          done: false\n        };\n        dispatch(addText({\n          todo: todo,\n          btnTxt: btnTxt\n        }));\n        // push(todoRef,todo)\n      } else {\n        // dispatch(addText({edit:edit,inp:inpRef.current.value}))\n        update(edit, {\n          title: inpRef.current.value\n        });\n        setBtnTxt('Add New Task');\n      }\n      inpRef.current.value = '';\n    } else {\n      alert('Fill Details');\n    }\n  };\n  // Function Edits Data\n  const editHandler = (id, title) => {\n    inpRef.current.value = title;\n    // dispatch(editText(id))\n    const todoRef = ref(db, \"/todos/\" + id);\n    setEdit(todoRef);\n    setBtnTxt('Update Text');\n  };\n  // function check Uncheck the completed and incompleted tasks \n  const checkHandler = (id, item) => {\n    if (!item.done) {\n      const todoRef = ref(db, \"/todos/\" + id);\n      update(todoRef, {\n        done: true\n      });\n    } else {\n      const todoRef = ref(db, \"/todos/\" + id);\n      update(todoRef, {\n        done: false\n      });\n    }\n  };\n  // Function deletes Task\n  const deleteHandler = id => {\n    const del = ref(db, \"/todos/\" + id);\n    remove(del);\n  };\n  // Function Deletes All Tasks\n  const deleteAll = () => {\n    remove(ref(db, \"/todos\"));\n  };\n  // Function deletes Completed tasks\n  const deleteCompleted = () => {\n    todolist.map(item => {\n      if (item.done) {\n        remove(ref(db, \"/todos/\" + item.id));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      btnTxt: btnTxt,\n      addData: addData,\n      inpChangeHandler: inpChangeHandler,\n      inpRef: inpRef,\n      todolist: todolist,\n      editHandler: editHandler,\n      deleteAll: deleteAll,\n      deleteHandler: deleteHandler,\n      checkHandler: checkHandler,\n      deleteCompleted: deleteCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3yxVB9jAcDFAr+U8gGCWMGf04CM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","TodoForm","firebaseApp","getDatabase","onValue","push","ref","remove","update","useDispatch","useSelector","addText","editText","getData","App","db","state","todoSlice","dispatch","btnTxt","setBtnTxt","title","setTitle","todolist","setTodoList","edit","setEdit","inpRef","todoRef","snapshot","todos","val","newTodoList","id","inpChangeHandler","e","target","value","addData","current","todo","done","alert","editHandler","checkHandler","item","deleteHandler","del","deleteAll","deleteCompleted","map"],"sources":["/home/cedcoss/Anshika/todo_firebase_redux/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport firebaseApp from './Firebase';\nimport {getDatabase, onValue, push, ref, remove, update} from 'firebase/database'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addText, editText, getData } from './features/todoSlice';\nfunction App() {\n\n  const db = getDatabase(firebaseApp)\n  var state=useSelector(state=>state.todoSlice)\n  var dispatch = useDispatch()\n  var [btnTxt,setBtnTxt]=useState('Add New Task')\n  var [title,setTitle]=useState('')\n  var [todolist,setTodoList]=useState([])\n  var [edit,setEdit]=useState('')\n  var inpRef = useRef()\n  const todoRef = ref(db,\"/todos\");\n\n  useEffect(()=>{\n    dispatch(getData())\n    onValue(todoRef, (snapshot)=>{\n      const todos = snapshot.val()\n      const newTodoList=[]\n      for(let id in todos){\n        newTodoList.push({id,...todos[id]});\n      }\n      setTodoList(newTodoList)\n    });\n  },[db])\n  // Input Handler Function\n  const inpChangeHandler=(e)=>{\n    setTitle(e.target.value)\n  }\n  // function adds data in a list\n  // console.log(state)\n  const addData=()=>{\n    if(inpRef.current.value!=''){\n    if(btnTxt=='Add New Task'){\n      const todo={\n        title,\n        done:false\n      }\n      dispatch(addText({todo:todo,btnTxt:btnTxt}))\n      // push(todoRef,todo)\n    }\n    else{\n      // dispatch(addText({edit:edit,inp:inpRef.current.value}))\n      update(edit,{title:inpRef.current.value})\n      setBtnTxt('Add New Task')\n    }\n    inpRef.current.value=''\n  }\n  else{\n    alert('Fill Details')\n  }\n  }\n  // Function Edits Data\n  const editHandler=(id,title)=>{\n    inpRef.current.value=title\n    // dispatch(editText(id))\n    const todoRef = ref(db, \"/todos/\" + id);\n    setEdit(todoRef)\n    setBtnTxt('Update Text')\n  }\n  // function check Uncheck the completed and incompleted tasks \n  const checkHandler=(id,item)=>{\n    if(!item.done){\n      const todoRef = ref(db,\"/todos/\"+id)\n      update(todoRef,{done:true})\n    }\n    else{\n      const todoRef = ref(db,\"/todos/\"+id)\n      update(todoRef,{done:false})\n    }\n  }\n  // Function deletes Task\n  const deleteHandler=(id)=>{\n    const del = ref(db,\"/todos/\"+id)\n    remove(del)\n  }\n  // Function Deletes All Tasks\n  const deleteAll =()=>{\n    remove(ref(db,\"/todos\"))\n  }\n  // Function deletes Completed tasks\n  const deleteCompleted =()=>{\n    todolist.map((item)=>{\n      if(item.done){\n        remove(ref(db,\"/todos/\"+item.id))\n      }\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>TodoInput</h1>\n      <TodoForm btnTxt={btnTxt} addData={addData} inpChangeHandler={inpChangeHandler} inpRef={inpRef} todolist={todolist} editHandler={editHandler} deleteAll={deleteAll} deleteHandler={deleteHandler} checkHandler={checkHandler} deleteCompleted={deleteCompleted}/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,YAAY;AACpC,SAAQC,WAAW,EAAEC,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAO,mBAAmB;AACjF,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,sBAAsB;AAAC;AAClE,SAASC,GAAG,GAAG;EAAA;EAEb,MAAMC,EAAE,GAAGZ,WAAW,CAACD,WAAW,CAAC;EACnC,IAAIc,KAAK,GAACN,WAAW,CAACM,KAAK,IAAEA,KAAK,CAACC,SAAS,CAAC;EAC7C,IAAIC,QAAQ,GAAGT,WAAW,EAAE;EAC5B,IAAI,CAACU,MAAM,EAACC,SAAS,CAAC,GAACpB,QAAQ,CAAC,cAAc,CAAC;EAC/C,IAAI,CAACqB,KAAK,EAACC,QAAQ,CAAC,GAACtB,QAAQ,CAAC,EAAE,CAAC;EACjC,IAAI,CAACuB,QAAQ,EAACC,WAAW,CAAC,GAACxB,QAAQ,CAAC,EAAE,CAAC;EACvC,IAAI,CAACyB,IAAI,EAACC,OAAO,CAAC,GAAC1B,QAAQ,CAAC,EAAE,CAAC;EAC/B,IAAI2B,MAAM,GAAG5B,MAAM,EAAE;EACrB,MAAM6B,OAAO,GAAGtB,GAAG,CAACS,EAAE,EAAC,QAAQ,CAAC;EAEhCjB,SAAS,CAAC,MAAI;IACZoB,QAAQ,CAACL,OAAO,EAAE,CAAC;IACnBT,OAAO,CAACwB,OAAO,EAAGC,QAAQ,IAAG;MAC3B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAG,EAAE;MAC5B,MAAMC,WAAW,GAAC,EAAE;MACpB,KAAI,IAAIC,EAAE,IAAIH,KAAK,EAAC;QAClBE,WAAW,CAAC3B,IAAI,CAAC;UAAC4B,EAAE;UAAC,GAAGH,KAAK,CAACG,EAAE;QAAC,CAAC,CAAC;MACrC;MACAT,WAAW,CAACQ,WAAW,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAC,CAACjB,EAAE,CAAC,CAAC;EACP;EACA,MAAMmB,gBAAgB,GAAEC,CAAC,IAAG;IAC1Bb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EACD;EACA;EACA,MAAMC,OAAO,GAAC,MAAI;IAChB,IAAGX,MAAM,CAACY,OAAO,CAACF,KAAK,IAAE,EAAE,EAAC;MAC5B,IAAGlB,MAAM,IAAE,cAAc,EAAC;QACxB,MAAMqB,IAAI,GAAC;UACTnB,KAAK;UACLoB,IAAI,EAAC;QACP,CAAC;QACDvB,QAAQ,CAACP,OAAO,CAAC;UAAC6B,IAAI,EAACA,IAAI;UAACrB,MAAM,EAACA;QAAM,CAAC,CAAC,CAAC;QAC5C;MACF,CAAC,MACG;QACF;QACAX,MAAM,CAACiB,IAAI,EAAC;UAACJ,KAAK,EAACM,MAAM,CAACY,OAAO,CAACF;QAAK,CAAC,CAAC;QACzCjB,SAAS,CAAC,cAAc,CAAC;MAC3B;MACAO,MAAM,CAACY,OAAO,CAACF,KAAK,GAAC,EAAE;IACzB,CAAC,MACG;MACFK,KAAK,CAAC,cAAc,CAAC;IACvB;EACA,CAAC;EACD;EACA,MAAMC,WAAW,GAAC,CAACV,EAAE,EAACZ,KAAK,KAAG;IAC5BM,MAAM,CAACY,OAAO,CAACF,KAAK,GAAChB,KAAK;IAC1B;IACA,MAAMO,OAAO,GAAGtB,GAAG,CAACS,EAAE,EAAE,SAAS,GAAGkB,EAAE,CAAC;IACvCP,OAAO,CAACE,OAAO,CAAC;IAChBR,SAAS,CAAC,aAAa,CAAC;EAC1B,CAAC;EACD;EACA,MAAMwB,YAAY,GAAC,CAACX,EAAE,EAACY,IAAI,KAAG;IAC5B,IAAG,CAACA,IAAI,CAACJ,IAAI,EAAC;MACZ,MAAMb,OAAO,GAAGtB,GAAG,CAACS,EAAE,EAAC,SAAS,GAACkB,EAAE,CAAC;MACpCzB,MAAM,CAACoB,OAAO,EAAC;QAACa,IAAI,EAAC;MAAI,CAAC,CAAC;IAC7B,CAAC,MACG;MACF,MAAMb,OAAO,GAAGtB,GAAG,CAACS,EAAE,EAAC,SAAS,GAACkB,EAAE,CAAC;MACpCzB,MAAM,CAACoB,OAAO,EAAC;QAACa,IAAI,EAAC;MAAK,CAAC,CAAC;IAC9B;EACF,CAAC;EACD;EACA,MAAMK,aAAa,GAAEb,EAAE,IAAG;IACxB,MAAMc,GAAG,GAAGzC,GAAG,CAACS,EAAE,EAAC,SAAS,GAACkB,EAAE,CAAC;IAChC1B,MAAM,CAACwC,GAAG,CAAC;EACb,CAAC;EACD;EACA,MAAMC,SAAS,GAAE,MAAI;IACnBzC,MAAM,CAACD,GAAG,CAACS,EAAE,EAAC,QAAQ,CAAC,CAAC;EAC1B,CAAC;EACD;EACA,MAAMkC,eAAe,GAAE,MAAI;IACzB1B,QAAQ,CAAC2B,GAAG,CAAEL,IAAI,IAAG;MACnB,IAAGA,IAAI,CAACJ,IAAI,EAAC;QACXlC,MAAM,CAACD,GAAG,CAACS,EAAE,EAAC,SAAS,GAAC8B,IAAI,CAACZ,EAAE,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,QAAQ;MAAC,MAAM,EAAEd,MAAO;MAAC,OAAO,EAAEmB,OAAQ;MAAC,gBAAgB,EAAEJ,gBAAiB;MAAC,MAAM,EAAEP,MAAO;MAAC,QAAQ,EAAEJ,QAAS;MAAC,WAAW,EAAEoB,WAAY;MAAC,SAAS,EAAEK,SAAU;MAAC,aAAa,EAAEF,aAAc;MAAC,YAAY,EAAEF,YAAa;MAAC,eAAe,EAAEK;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7P;AAEV;AAAC,GA7FQnC,GAAG;EAAA,QAGAJ,WAAW,EACND,WAAW;AAAA;AAAA,KAJnBK,GAAG;AA+FZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}