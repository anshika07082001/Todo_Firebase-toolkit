{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport firebaseApp from '../Firebase';\nimport { getDatabase, onValue, push, ref, remove, update } from 'firebase/database';\nconst db = getDatabase(firebaseApp);\nconst todoRef = ref(db, \"/todos\");\nvar initialState = {\n  todolist: []\n};\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    getData: (state, action) => {\n      onValue(todoRef, snapshot => {\n        const todos = snapshot.val();\n        for (let id in todos) {\n          newTodoList.push({\n            id,\n            ...todos[id]\n          });\n        }\n        // setTodoList(newTodoList)\n      });\n\n      state.todolist.push(newTodoList);\n    },\n    addText: (state, action) => {\n      if (action.payload.btnTxt == 'Add New Task') {\n        push(todoRef, action.payload.todo);\n      } else {\n        console.log(action.payload);\n        update(action.payload.edit, {\n          title: action.payload.inp\n        });\n      }\n    },\n    editText: (state, action) => {\n      // console.log(action.payload)\n      state.todoRef = ref(db, \"/todos/\" + action.payload);\n    }\n  }\n});\nexport const {\n  getData,\n  addText,\n  editText\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","firebaseApp","getDatabase","onValue","push","ref","remove","update","db","todoRef","initialState","todolist","todoSlice","name","reducers","getData","state","action","snapshot","todos","val","id","newTodoList","addText","payload","btnTxt","todo","console","log","edit","title","inp","editText","actions","reducer"],"sources":["/home/cedcoss/Anshika/todo_firebase_redux/src/features/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport firebaseApp from '../Firebase';\nimport {getDatabase, onValue, push, ref, remove, update} from 'firebase/database'\n\nconst db = getDatabase(firebaseApp)\nconst todoRef = ref(db,\"/todos\");\n\nvar initialState ={\n    todolist:[]\n}\n\nconst todoSlice =createSlice({\n    name:'todo',\n    initialState,\n    reducers:{\n        getData:(state,action)=>{\n            onValue(todoRef, (snapshot)=>{\n                const todos = snapshot.val()\n                for(let id in todos){\n                  newTodoList.push({id,...todos[id]});\n                }\n                // setTodoList(newTodoList)\n              });\n              state.todolist.push(newTodoList)\n        },\n        addText:(state,action)=>{\n            if(action.payload.btnTxt=='Add New Task'){\n                push(todoRef,action.payload.todo)\n            }\n            else{\n                console.log(action.payload)\n                update(action.payload.edit,{title:action.payload.inp})\n            }\n        },\n        editText:(state,action)=>{\n            // console.log(action.payload)\n            state.todoRef= ref(db, \"/todos/\" + action.payload);\n        }\n    }\n})\n\nexport const {getData,addText,editText} = todoSlice.actions\n\nexport default todoSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,aAAa;AACrC,SAAQC,WAAW,EAAEC,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAO,mBAAmB;AAEjF,MAAMC,EAAE,GAAGN,WAAW,CAACD,WAAW,CAAC;AACnC,MAAMQ,OAAO,GAAGJ,GAAG,CAACG,EAAE,EAAC,QAAQ,CAAC;AAEhC,IAAIE,YAAY,GAAE;EACdC,QAAQ,EAAC;AACb,CAAC;AAED,MAAMC,SAAS,GAAEZ,WAAW,CAAC;EACzBa,IAAI,EAAC,MAAM;EACXH,YAAY;EACZI,QAAQ,EAAC;IACLC,OAAO,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MACpBd,OAAO,CAACM,OAAO,EAAGS,QAAQ,IAAG;QACzB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAG,EAAE;QAC5B,KAAI,IAAIC,EAAE,IAAIF,KAAK,EAAC;UAClBG,WAAW,CAAClB,IAAI,CAAC;YAACiB,EAAE;YAAC,GAAGF,KAAK,CAACE,EAAE;UAAC,CAAC,CAAC;QACrC;QACA;MACF,CAAC,CAAC;;MACFL,KAAK,CAACL,QAAQ,CAACP,IAAI,CAACkB,WAAW,CAAC;IACtC,CAAC;IACDC,OAAO,EAAC,CAACP,KAAK,EAACC,MAAM,KAAG;MACpB,IAAGA,MAAM,CAACO,OAAO,CAACC,MAAM,IAAE,cAAc,EAAC;QACrCrB,IAAI,CAACK,OAAO,EAACQ,MAAM,CAACO,OAAO,CAACE,IAAI,CAAC;MACrC,CAAC,MACG;QACAC,OAAO,CAACC,GAAG,CAACX,MAAM,CAACO,OAAO,CAAC;QAC3BjB,MAAM,CAACU,MAAM,CAACO,OAAO,CAACK,IAAI,EAAC;UAACC,KAAK,EAACb,MAAM,CAACO,OAAO,CAACO;QAAG,CAAC,CAAC;MAC1D;IACJ,CAAC;IACDC,QAAQ,EAAC,CAAChB,KAAK,EAACC,MAAM,KAAG;MACrB;MACAD,KAAK,CAACP,OAAO,GAAEJ,GAAG,CAACG,EAAE,EAAE,SAAS,GAAGS,MAAM,CAACO,OAAO,CAAC;IACtD;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACT,OAAO;EAACQ,OAAO;EAACS;AAAQ,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AAE3D,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}