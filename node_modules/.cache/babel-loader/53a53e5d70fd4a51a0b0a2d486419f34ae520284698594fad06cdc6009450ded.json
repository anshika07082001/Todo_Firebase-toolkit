{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport firebaseApp from '../Firebase';\nimport { getDatabase, onValue, push, ref, remove, update } from 'firebase/database';\nimport { useState } from \"react\";\nconst db = getDatabase(firebaseApp);\nconst todoRef = ref(db, \"/todos\");\nvar [edit, setEdit] = useState('');\nvar initialState = {\n  btnTxt: 'Add new Task'\n};\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addText: (state, action) => {\n      if (state.btnTxt == 'Add new Task') {\n        push(todoRef, action.payload);\n      } else {\n        // update(action.payload.edit,{title:action.payload.inp})\n        // state.btnTxt='Add New Task'\n      }\n    },\n    editText: (state, action) => {\n      const todoRef = ref(db, \"/todos/\" + action.payload);\n    }\n  }\n});\nexport const {\n  addText,\n  editText\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","firebaseApp","getDatabase","onValue","push","ref","remove","update","useState","db","todoRef","edit","setEdit","initialState","btnTxt","todoSlice","name","reducers","addText","state","action","payload","editText","actions","reducer"],"sources":["/home/cedcoss/Anshika/todo_firebase2/src/features/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport firebaseApp from '../Firebase';\nimport {getDatabase, onValue, push, ref, remove, update} from 'firebase/database'\nimport { useState } from \"react\";\n\nconst db = getDatabase(firebaseApp)\nconst todoRef = ref(db,\"/todos\");\nvar [edit,setEdit]=useState('')\n\nvar initialState ={\n    btnTxt:'Add new Task'\n}\n\nconst todoSlice =createSlice({\n    name:'todo',\n    initialState,\n    reducers:{\n        addText:(state,action)=>{\n            if(state.btnTxt=='Add new Task'){\n                push(todoRef,action.payload)\n            }\n            else{\n                // update(action.payload.edit,{title:action.payload.inp})\n                // state.btnTxt='Add New Task'\n            }\n        },\n        editText:(state,action)=>{\n            const todoRef = ref(db, \"/todos/\" + action.payload);\n        }\n    }\n})\n\nexport const {addText,editText} = todoSlice.actions\n\nexport default todoSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,aAAa;AACrC,SAAQC,WAAW,EAAEC,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAO,mBAAmB;AACjF,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,EAAE,GAAGP,WAAW,CAACD,WAAW,CAAC;AACnC,MAAMS,OAAO,GAAGL,GAAG,CAACI,EAAE,EAAC,QAAQ,CAAC;AAChC,IAAI,CAACE,IAAI,EAACC,OAAO,CAAC,GAACJ,QAAQ,CAAC,EAAE,CAAC;AAE/B,IAAIK,YAAY,GAAE;EACdC,MAAM,EAAC;AACX,CAAC;AAED,MAAMC,SAAS,GAAEf,WAAW,CAAC;EACzBgB,IAAI,EAAC,MAAM;EACXH,YAAY;EACZI,QAAQ,EAAC;IACLC,OAAO,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MACpB,IAAGD,KAAK,CAACL,MAAM,IAAE,cAAc,EAAC;QAC5BV,IAAI,CAACM,OAAO,EAACU,MAAM,CAACC,OAAO,CAAC;MAChC,CAAC,MACG;QACA;QACA;MAAA;IAER,CAAC;IACDC,QAAQ,EAAC,CAACH,KAAK,EAACC,MAAM,KAAG;MACrB,MAAMV,OAAO,GAAGL,GAAG,CAACI,EAAE,EAAE,SAAS,GAAGW,MAAM,CAACC,OAAO,CAAC;IACvD;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,OAAO;EAACI;AAAQ,CAAC,GAAGP,SAAS,CAACQ,OAAO;AAEnD,eAAeR,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}