{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Anshika/todo_firebase2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport firebaseApp from './Firebase';\nimport { getDatabase, onValue, push, ref, remove, update } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const db = getDatabase(firebaseApp);\n  var [btnTxt, setBtnTxt] = useState('Add New Task');\n  var [title, setTitle] = useState('');\n  var [todolist, setTodoList] = useState([]);\n  var [edit, setEdit] = useState('');\n  var inpRef = useRef();\n  const todoRef = ref(db, \"/todos\");\n  useEffect(() => {\n    onValue(todoRef, snapshot => {\n      const todos = snapshot.val();\n      const newTodoList = [];\n      for (let id in todos) {\n        newTodoList.push({\n          id,\n          ...todos[id]\n        });\n      }\n      setTodoList(newTodoList);\n    });\n  }, [db]);\n\n  // Function shows all data\n  const showAllData = () => {\n    setTodoList(todolist);\n  };\n  // Function shows done data \n  const showCompData = () => {\n    var completed = [];\n    let temp = todolist;\n    tempmp.map(item => {\n      if (item.done) {\n        completed.push(item);\n      }\n    });\n    setTodoList(completed);\n  };\n  // Function shows incompleted Data\n  const showInCompData = () => {\n    var incompleted = [];\n    todolist.map(item => {\n      if (!item.done) {\n        incompleted.push(item);\n      }\n    });\n    setTodoList(incompleted);\n  };\n  const inpChangeHandler = e => {\n    setTitle(e.target.value);\n  };\n  // function adds data in a list\n  const addData = () => {\n    if (btnTxt == 'Add New Task') {\n      const todo = {\n        title,\n        done: false\n      };\n      push(todoRef, todo);\n    } else {\n      console.log(edit);\n      update(edit, {\n        title: inpRef.current.value\n      });\n      setBtnTxt('Add New Task');\n    }\n    inpRef.current.value = '';\n  };\n  // Function Edits Data\n  const editHandler = (id, title) => {\n    inpRef.current.value = title;\n    const todoRef = ref(db, \"/todos/\" + id);\n    console.log(todoRef);\n    setEdit(todoRef);\n    setBtnTxt('Update Text');\n  };\n  // function check Uncheck the completed and incompleted tasks \n  const checkHandler = (id, item) => {\n    if (!item.done) {\n      const todoRef = ref(db, \"/todos/\" + id);\n      update(todoRef, {\n        done: true\n      });\n    } else {\n      const todoRef = ref(db, \"/todos/\" + id);\n      update(todoRef, {\n        done: false\n      });\n    }\n  };\n  // Function deletes Task\n  const deleteHandler = id => {\n    const del = ref(db, \"/todos/\" + id);\n    remove(del);\n  };\n  // Function Deletes All Tasks\n  const deleteAll = () => {\n    remove(ref(db, \"/todos\"));\n  };\n  // Function deletes Completed tasks\n  const deleteCompleted = () => {\n    todolist.map(item => {\n      if (item.done) {\n        remove(ref(db, \"/todos/\" + item.id));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      btnTxt: btnTxt,\n      addData: addData,\n      inpChangeHandler: inpChangeHandler,\n      inpRef: inpRef,\n      todolist: todolist,\n      editHandler: editHandler,\n      deleteAll: deleteAll,\n      deleteHandler: deleteHandler,\n      checkHandler: checkHandler,\n      deleteCompleted: deleteCompleted,\n      showAllData: showAllData,\n      showCompData: showCompData,\n      showInCompData: showInCompData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"luBK6pj7JbgUjkP7ayH483jcfWw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","TodoForm","firebaseApp","getDatabase","onValue","push","ref","remove","update","App","db","btnTxt","setBtnTxt","title","setTitle","todolist","setTodoList","edit","setEdit","inpRef","todoRef","snapshot","todos","val","newTodoList","id","showAllData","showCompData","completed","temp","tempmp","map","item","done","showInCompData","incompleted","inpChangeHandler","e","target","value","addData","todo","console","log","current","editHandler","checkHandler","deleteHandler","del","deleteAll","deleteCompleted"],"sources":["/home/cedcoss/Anshika/todo_firebase2/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport firebaseApp from './Firebase';\nimport {getDatabase, onValue, push, ref, remove, update} from 'firebase/database'\n\nfunction App() {\n\n  const db = getDatabase(firebaseApp)\n  var [btnTxt,setBtnTxt]=useState('Add New Task')\n  var [title,setTitle]=useState('')\n  var [todolist,setTodoList]=useState([])\n  var [edit,setEdit]=useState('')\n  var inpRef = useRef()\n  const todoRef = ref(db,\"/todos\");\n  useEffect(()=>{\n    onValue(todoRef, (snapshot)=>{\n      const todos = snapshot.val()\n      const newTodoList=[]\n      for(let id in todos){\n        newTodoList.push({id,...todos[id]});\n      }\n      setTodoList(newTodoList)\n    });\n  },[db])\n\n// Function shows all data\n  const showAllData=()=>{\n    setTodoList(todolist)\n  }\n// Function shows done data \n  const showCompData=()=>{\n    var completed=[]\n    let temp=todolist;\n    tempmp.map((item)=>{\n      if(item.done){\n        completed.push(item)\n      }\n    })\n    setTodoList(completed)\n  }\n// Function shows incompleted Data\n  const showInCompData=()=>{\n    var incompleted=[]\n    todolist.map((item)=>{\n      if(!item.done){\n        incompleted.push(item)\n      }\n    })\n    setTodoList(incompleted)\n  } \n  const inpChangeHandler=(e)=>{\n    setTitle(e.target.value)\n  }\n// function adds data in a list\n  const addData=()=>{\n    if(btnTxt=='Add New Task'){\n      const todo={\n        title,\n        done:false\n      }\n      push(todoRef,todo)\n    }\n    else{\n      console.log(edit)\n      update(edit,{title:inpRef.current.value})\n      setBtnTxt('Add New Task')\n    }\n    inpRef.current.value=''\n  }\n// Function Edits Data\n  const editHandler=(id,title)=>{\n    inpRef.current.value=title\n    const todoRef = ref(db, \"/todos/\" + id);\n    console.log(todoRef)\n    setEdit(todoRef)\n    setBtnTxt('Update Text')\n  }\n// function check Uncheck the completed and incompleted tasks \n  const checkHandler=(id,item)=>{\n    if(!item.done){\n      const todoRef = ref(db,\"/todos/\"+id)\n      update(todoRef,{done:true})\n    }\n    else{\n      const todoRef = ref(db,\"/todos/\"+id)\n      update(todoRef,{done:false})\n    }\n  }\n// Function deletes Task\n  const deleteHandler=(id)=>{\n    const del = ref(db,\"/todos/\"+id)\n    remove(del)\n  }\n// Function Deletes All Tasks\n  const deleteAll =()=>{\n    remove(ref(db,\"/todos\"))\n  }\n// Function deletes Completed tasks\n  const deleteCompleted =()=>{\n    todolist.map((item)=>{\n      if(item.done){\n        remove(ref(db,\"/todos/\"+item.id))\n      }\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>TodoInput</h1>\n      <TodoForm btnTxt={btnTxt} addData={addData} inpChangeHandler={inpChangeHandler} inpRef={inpRef} todolist={todolist} editHandler={editHandler} deleteAll={deleteAll} deleteHandler={deleteHandler} checkHandler={checkHandler} deleteCompleted={deleteCompleted} showAllData={showAllData} showCompData={showCompData} showInCompData={showInCompData}/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}